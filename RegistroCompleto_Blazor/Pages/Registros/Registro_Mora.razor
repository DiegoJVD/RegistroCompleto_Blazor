@page "/Moras"

@inject IToastService Toast

<EditForm Model="mora" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="container">
            <div class="card-header">
                Registro de Moras
            </div>
            <div class="card-body">
                <form>
                    <div class="form-group">
                        <label> Mora Id:</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="mora.MoraId" class="form-control " />
                            <div class="input-group-append" display: inline-block>
                                <button type="button" class="btn btn-warning" @onclick="Buscar">
                                    <i class="oi oi-magnifying-glass mr-2" /> Buscar
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Fecha:</label>
                        <InputDate @bind-Value="mora.Fecha" class="form-control " readonly />
                        <ValidationMessage For="@(() => mora.Fecha)" />
                    </div>
                    <div class="card" style=" color: black; border-width: 3px">
                        <div class="card-body">

                            <div class="form-group form-inline">
                                <label>Prestamo Id:</label>
                                <select @bind="Prestamoselect" class="form-control" style="width:300px; margin-right: 30px ">
                                    <option value="0" disabled selected></option>
                                    @foreach (var item in List)
                                    {
                                        @((prestamo) = PrestamosBLL.Buscar(item.PrestamoId));
                                    }

                                    <option value="@prestamo.PrestamoId">Prestamo Id: @prestamo.PrestamoId</option>

                                </select>
                                <div class="form-inline" style="margin-right: 30px">
                                    <label>Valor:</label>
                                    <div class="input-group">
                                        <InputNumber @bind-Value="ValorMora" class="form-control " />
                                    </div>
                                </div>
                                <div class="form-inline">
                                    <button type="button" class="btn btn-primary input-group-text" style="margin-right:30px" @onclick="Agregar">
                                        Agregar
                                    </button>
                                </div>
                                <div class="form-inline">
                                    <button type="button" class="btn btn-danger input-group-text" @onclick="Remover">
                                        Remover
                                    </button>
                                </div>

                            </div>
                            <div class="table" style=" height:200px; overflow: auto; display: block;">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Id:</th>
                                            <th>Valor:</th>
                                        </tr>
                                    </thead>
                                    <tbody class="text-body">
                                        @foreach (var item in mora.Detalle)
                                        {
                                            <tr>
                                                <td>@item.MorasDetalleId</td>

                                                <td>@item.Valor</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <label class="form-control">Monto Total: @mora.Total</label>
                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                        <i class="oi oi-file mr-2" />Nuevo
                    </button>
                    <button type="submit" class="btn btn-lg btn-success">
                        <i class="oi oi-account-login" style="transform:rotate(90deg)" /> Guardar
                    </button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                        <i class="oi oi-trash mr-2" />Eliminar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    private Moras mora = new Moras();
    Personas persona = new Personas();
    Prestamos prestamo = new Prestamos();

    public int prestamoId { get; set; }
    public int Prestamoselect { get; set; }
    public decimal ValorMora { get; set; }

    List<Prestamos> List = new List<Prestamos>();


    protected override void OnInitialized()
    {
        Nuevo();
    }

    public void Eliminar()
    {
        bool Eliminado = false;

        var Buscado = MorasBLL.Buscar(mora.MoraId);

        if (Buscado != null)
        {
            foreach (var item in mora.Detalle)
            {
                var Prestamo = PrestamosBLL.Buscar(item.PrestamoId);
                var persona = PersonasBLL.Buscar(Prestamo.PersonaId);

                persona.Balance -= item.Valor;

                PersonasBLL.Guardar(persona);
            }

            Eliminado = MorasBLL.Eliminar(mora.MoraId);

            if (Eliminado)
            {
                Nuevo();
                Toast.ShowSuccess("Mora Eliminada correctamente");
            }
            else
                Toast.ShowError("No se pudo eliminar la Mora");
        }


    }

    public void Nuevo()
    {
        Prestamoselect = 0;

        mora = new Moras();

        List = PrestamosBLL.GetList(c => true);
    }

    public void Agregar()
    {
        var prestamo = PrestamosBLL.Buscar(Prestamoselect);

        bool existe = false;

        foreach (var item in mora.Detalle)
        {
            if (item.PrestamoId == Prestamoselect)
            {
                existe = true;
                break;
            }
            else
                existe = false;
        }

        if (existe == false)
        {
            mora.Detalle.Add(new MorasDetalle { MoraId = mora.MoraId, PrestamoId = Prestamoselect, Valor = ValorMora });
            mora.Total += ValorMora;
            Actualizar();
        }

    }

     public void Remover()
    {
        var prestamo = PrestamosBLL.Buscar(Prestamoselect);

        MorasDetalle MoraDetalle = new MorasDetalle();

        bool existe = false;

        foreach (var item in mora.Detalle)
        {
            if (item.PrestamoId == Prestamoselect)
            {


                existe = true;
                MoraDetalle = item;
                break;
            }
            else
                existe = false;
        }

        if (existe == true)
        {
            mora.Detalle.Remove(MoraDetalle); 
            mora.Total -= ValorMora;
            Actualizar();
        }
            else
            {
                Toast.ShowError("No existe la mora, no se pudo remover");
             
            }

    }

    private void Actualizar()
    {
        Prestamoselect = 0;
        ValorMora = 0;
    }
    public void Buscar()
    {
        if (mora.MoraId > 0)
        {
            var Mora = MorasBLL.Buscar(mora.MoraId);

            if (Mora != null)
                this.mora = Mora;
            else
            {
                Toast.ShowError("La Mora no fue encontrada");
                Nuevo();
            }
        }
        else
            Toast.ShowWarning("No se ha ingresado ningun Id");
    }



    public void Guardar()
    {
        bool Guardado;

        Guardado = MorasBLL.Guardar(mora);

        if (Guardado)
        {
            Nuevo();
            Toast.ShowSuccess("Mora guardada correctamente");
        }
        else
            Toast.ShowError("No se pudo guardar la Mora");
    }


}